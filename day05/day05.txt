十四、...
2.静态成员函数
1)如果在一个类成员函数的返回类型前面加上static关键字，那么该函数就是这个类的静态成员函数。
2)静态成员函数没有this指针，也不需要通过对象来调用，其本质和一个全局函数没有太大区别，只是多了作用域和访问控制属性的限制。
3)静态成员函数只能访问静态成员，但是非静态成员函数既可以访问非静态成员，也可以访问静态成员。
十五、成员指针
1.成员变量指针
Student s1;
string* p = &s1.name; // 普通指针，而非成员指针
1)定义：类型 类名::*成员指针变量名 = &类名::成员变量;
2)使用：对象.*成员指针变量名
             其中".*"被称为成员指针解引用运算符
             对象指针->*成员指针变量名
             其中"->*"被称为间接成员指针解引用运算符
3)成员变量指针的本质就是类中特定成员变量在对象中的相对地址。
2.成员函数指针
1)定义：返回类型 (类名::*成员函数指针) (形参表) =
                &类名::成员函数名;
2)使用：(对象.*成员函数指针) (实参表);
             (对象指针->*成员函数指针) (实参表);
3)成员函数指针中存放的就是成员函数在代码区中的绝对地址，但是为了提供this指针，同样需要通过对象或对象指针调用。
3.静态成员指针与普通指针在定义、使用和语义上没有任何区别。
4.无论是普通成员还是静态成员，在对其成员指针进行初始化或赋值操作时，同样要受该成员访问控制属性的约束。
=======
操作符重载
=======
复数：3+4i
一、双目操作符的重载
1.计算类双目操作符
形如L#R的表达式会被编译器处理为形如L.operator#(R)的成员函数的调用，该函数的返回值即为表达式的值。
形如L#R的表达式也可以被编译器处理为形如::operator#(L,R)的全局函数的调用，该函数的返回值即为表达式的值。
2.赋值类双目操作符
表达式的值是一个左值，而且它就是左操作数本身。
左操作数不能是常量，右操作数可以是常量。
二、单目操作符的重载
1.计算类单目操作符
形如#O的表达式会被编译器处理为形如O.operator#()的成员函数的调用，该函数的返回值即为表达式的值。
形如#O的表达式也可以被编译器处理为形如::operator(O)的全局函数的调用，该函数的返回值即为表达式的值。
2.自增减单目操作符
1)前缀自增减：#O -> O.operator#() / ::operator# (O)
操作数不能是右值，返回值是操作数的引用。
2)后缀自增减：O# -> O.operator#(0) / ::operator# (O, 0)
操作数不能是右值，返回值是操作数自增减之前的副本。
三、其它操作符的重载
1.插入/提取操作符：<</>>
2.下标操作符：[]
3.函数操作符：()
4.解引用和间接成员访问操作符：*/->
5.类型转换操作符






